import json
import os

_root = os.path.dirname(os.path.realpath(__file__))

with open(os.path.join(_root, 'university_abbr.json')) as f:
    UNIVERSITY_ABBR = json.load(f)

# with open(os.path.join(_root, 'department.json')) as f:
#     DEPARMENT = json.load(f)

# with open(os.path.join(_root, 'institution.json')) as f:
#     INSTITUTE = json.load(f)

# # keyword list

# COUNTRY = (
#     ("italy", "italia", "torino", "turin", "portici", "palermo"),
#     (
#         "united kingdom",
#         "u.k.",
#         "\buk\b",
#         "uk.",
#         "england",
#         " uk",
#         "liverpool",
#         "london",
#         "crumpsall",
#         "leicester",
#         "manchester",
#         "cardiff",
#         "salford",
#         "bradford",
#         "oxford",
#         "clwyd",
#         "edinburgh",
#         "edinburge",
#     ),
#     (
#         "united states of america",
#         "u.s.a",
#         "u. s. a.",
#         "united states",
#         "massachusetts",
#         "boston",
#         "howard university",
#         "torrance",
#         "san francisco",
#         "duarte",
#         "los alamos",
#         "houston",
#     ),
#     (
#         "germany",
#         "frg",
#         "brd",
#         "f.r.g.",
#         "deutschland",
#         "engelskirchen",
#         "berlin",
#         "hannover",
#         "marburg",
#         "mainz",
#         "leipzig",
#         "frankfurt",
#     ),
#     (
#         "japan",
#         "keio University",
#         "jikei university",
#         "shiga university",
#         "jikei university",
#         "niigata university",
#         "sendai city",
#         "shiba",
#         "asahikawa",
#         "tokyo",
#         "yokohama",
#         "osaka",
#         "nagoya",
#         "sapporo",
#         "kobe",
#         "kyoto",
#         "fukuoka",
#         "kawasaki",
#         "saitama",
#         "hiroshima",
#         "sendai",
#         "kitakyushu",
#         "chiba",
#         "sakai",
#         "hamamatsu",
#         "niigata",
#         "shizuoka",
#         "okayama",
#         "asahikawa",
#         "yamaguchi",
#         "okayama",
#         "gunma",
#         "hyogo",
#         "kanazawa",
#         "fukui",
#         "tajimi",
#         "komagome",
#         "akita",
#         "suita",
#         "kochi",
#         "nara medical",
#         "keio",
#         "kobe university",
#         "gunma",
#         "gifu university",
#         "toranomon",
#         "bunkyo gakuin",
#     ),
#     ("south korea", "korea", "seoul"),
#     ("russia", "moscow"),
#     ("austria", "linz", "wien", " graz", "innsbruck"),
#     ("israel", "jerusalem", "haifa", "tel aviv"),
#     ("norway", " oslo"),
#     ("finland", "helsinki"),
#     ("south africa", "johannesburg"),
#     ("france", "paris", "marseille", "brest", "limoges", "toulouse"),
#     ("canada", "vancouver", "ontario", "ottawa", "nova scotia", "calgary",
#      "alberta"),
#     ("denmark", "copenhagen"),
#     ("taiwan", "taiwan, ", "taipei", "chi-mei medical"),
#     ("china", "beijing", "pr china", "hangzhou", "zhejiang", "shenyang",
#      "shanghai"),
#     ("egypt", "cairo"),
#     ("poland", "gdansk", "krakow"),
#     ("turkey", "istanbul", " ankara"),
#     ("netherlands", "utrecht", "nijmegen", "amsterdam", "leiden"),
#     ("belgium", "belgique", " namur", "bruxelles", " genk"),
#     ("sweden", "karlstad", "uppsala", "stockholm"),
#     ("australia", " perth", "queensland", "canberra", "melbourne"),
#     ("south africa", "johannesburg", "onderstepoort", "pretoria"),
#     ("hungary", "ungarn"),
#     (
#         " india",
#         "chandigarh",
#         "hyderabad",
#         "delhi",
#         "calcutta",
#         "wardha",
#         " ucms",
#         "ludhiana",
#         "vellore",
#     ),
#     ("ireland", "dublin", "belfast"),
#     ("colombia", "bogota"),
#     (
#         "spain",
#         " madrid",
#         " toledo",
#         " alicante",
#         "zaragoza",
#         "saragossa",
#         "barcelona",
#         "hospital vega baja",
#         "valencia",
#         "malaga",
#     ),
#     ("greece", "athens"),
#     ("new zealand", "upper hutt", "auckland"),
#     ("saudi arabia", "riyadh"),
#     ("nigeria", "ibadan"),
#     ("croatia", "yugoslavia", "belgrade"),
#     ("switzerland", "basel", " geneva"),
#     ("brazil", "rio de janeiro"),
#     ("thailand", "bangkok"),
#     ("argentina", "buenos aires"),
#     ("tunisia", "tunis", "tunisie"),
#     ("czech republic", " praha", "prague", "czechoslovakia"),
#     ("hungary", "budapest"),
#     ("zimbabwe", "bulawayo"),
#     ("malaysia", "kelantan"),
#     ("vietnam", "hanoi"),
#     ("hong kong", "hong kong"),
#     (" iran", "tehran", "shiraz", "mashhad"),
#     ("brazil", "brasil", "rio de janeiro", "cordeiropolis"),
#     ("mexico", "mexico city"),
#     ("romania", "bucharest"),
#     ("congo", "democratic republic of congo"),
#     ("armenia", "yerevan"),
#     ("bosnia and herzegovina", "bosnia", "herzegovina"),
#     ("albania", "tirana"),
#     ("tanzania", "morogoro"),
#     ("sri lanka", "sri lanka"),
#     ("cyprus", "nicosia"),
#     ("gambia", " banjul"),
#     ("lithuania", "lietuvos"),
#     ("peru", " lima"),
#     ("portugal", "lisboa"),
#     ("philippines", "manila"),
#     ("kuwait", "kuwait city"),
# )

# STATES = frozenset([
#     "Alabama",
#     "Alaska",
#     "Arizona",
#     "Arkansas",
#     "California",
#     "Colorado",
#     "Connecticut",
#     "Delaware",
#     "Florida",
#     "Georgia",
#     "Hawaii",
#     "Idaho",
#     "Illinois",
#     "Indiana",
#     "Iowa",
#     "Kansas",
#     "Kentucky",
#     "Louisiana",
#     "Maine",
#     "Maryland",
#     "Massachusetts",
#     "Michigan",
#     "Minnesota",
#     "Mississippi",
#     "Missouri",
#     "Montana",
#     "Nebraska",
#     "Nevada",
#     "New Hampshire",
#     "New Jersey",
#     "New Mexico",
#     "New York",
#     "North Carolina",
#     "North Dakota",
#     "Ohio",
#     "Oklahoma",
#     "Oregon",
#     "Pennsylvania",
#     "Rhode Island",
#     "South Carolina",
#     "South Dakota",
#     "Tennessee",
#     "Texas",
#     "Utah",
#     "Vermont",
#     "Virginia",
#     "Washington",
#     "West Virginia",
#     "Wisconsin",
#     "Wyoming",
#     "Washington DC",
#     " AL",
#     " AK",
#     " AZ",
#     " AR",
#     " CA",
#     " CO",
#     " CT",
#     " DE",
#     " FL",
#     " GA ",
#     " GA,",
#     " HI",
#     " ID",
#     " IL",
#     " IN",
#     " IA",
#     " KS",
#     " KY",
#     " LA",
#     " ME",
#     " MD",
#     " MA,",
#     " MA ",
#     " MI",
#     " MN",
#     " MS",
#     " MO",
#     " MT",
#     " NE",
#     " NV",
#     " NH",
#     " NJ",
#     " NM",
#     " NY",
#     " NC",
#     " ND",
#     " OH",
#     " OK",
#     " OR",
#     " PA",
#     " RI",
#     " SC",
#     " SD",
#     " TN",
#     " TX",
#     " UT",
#     " VT",
#     " VA",
#     " WA",
#     " WV",
#     " WI",
#     " WY",
#     " DC",
# ])

# # use to concat university with string
# UNIVERSITY_MULTIPLE_CAMPUS = (
#     (
#         "university of california",
#         "berkeley",
#         "los angeles",
#         "davis",
#         "davis medical center",
#         "irvine",
#         "irvine medical center",
#         "san francisco",
#         "santa barbara",
#         "riverside",
#     ),
#     (
#         "university of illinois urbana champaign",
#         "urbana champaign",
#         "urbana",
#         "champaign",
#     ),
#     ("university of illinois", "urbana champaign", "chicago", "springfield",
#      "peoria"),
#     ("university of pittsburgh", "medical center"),
#     ("university of michigan", "ann arbor", "dearborn", "health system",
#      "flint"),
#     (
#         "university of minnesota",
#         "duluth",
#         "morris",
#         "medical Ccnter",
#         "rochester",
#         "crookston",
#     ),
# )
